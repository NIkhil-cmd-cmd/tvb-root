<Lems description="Kuramoto Base type of any cell/population which has a (dimensionless) rate _R.">

    <ComponentType name="rateml_model" extends="baseCellMembPot">

        <!-- Parameters with max will be assumed to be swept. sweep data will be matched by order of entry -->
        <!--  global_speed needs either to be swept or set as a single variable -->
        <Parameter name="global_speed" minval='1.0' maxval='2.0' dimension="" description="parametersweep"/>
        <Parameter name="global_coupling" minval='1.0' maxval='2.0' dimension="" description="parametersweep"/>
        <!-- Parameters with only min will be initial value -->
        <Parameter name="omega" minval='60.0 * 2.0 * 3.1415927 / 1e3' dimension=""/>
        <!-- Nsig is special. Noise attenuation factor. If set to 0, no stochastic integration -->
        <Parameter name="nsig" minval="0.5" dimension="" description="noiseparameter"/>
        <!-- Coupling parameters are special. Used for coupling when description is "couplingfunction"
         for the accumulation of nodes interaction use hardcoded value sigma, maxval sets the state to which
         the coupling should apply -->
        <Parameter name="cpop0" minval="sin(sigma_0 - theta)" maxval="0" dimension="" description="couplingfunction"/>
<!--        <Parameter name="cpop1" minval="sin(sigma1 - V)" maxval="2" dimension="" description="couplingfunction"/>-->

<!--        <Parameter name="rec_n" minval="1.0f / n_node" dimension=""/>-->

        <!--Network dependency, fixed for now -->
        <Attachments name="synapses" type="basePointCurrentDL"/>

        <Exposure name="theta" minval='1.0' maxval='2.0' dimension="" />

        <Dynamics>
            <!-- what do we need voltage for and why is it a state? -->
<!--            <StateVariable dimension="voltage" exposure="v" name="v"/>-->

            <!-- For CUDA models a single value for dimension is required. Dimension range is random init for py
             exposure is simulation bounds-->
            <StateVariable name="theta" minval="0.0" maxval="100" dimension="" exposure=""/>
            <!-- Cuda only for scaling the nodes coupled effect -->
            <DerivedVariable name="c_pop0" value="cpop0 * global_coupling"/>
            <!-- For python models a dimension range is required -->
            <!-- <StateVariable name="V" dimension="0.0, numpy.pi * 2.0" exposure="-2, 1"/>-->

            <TimeDerivative variable="dV" value="omega + c_pop0"/>
        </Dynamics>

    </ComponentType>
</Lems>